{"ast":null,"code":"var _jsxFileName = \"/Users/tonybruno/Documents/OC/ArgentBank/src/pages/User/user.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { setUser, updateName } from \"../../redux/Slices/userSlice\";\nimport { useNavigate } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction User() {\n  _s();\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n  const {\n    userName,\n    firstName,\n    lastName\n  } = useSelector(state => state.user);\n  const isLoggedIn = useSelector(state => state.auth.isLoggedIn);\n  const [newUserName, setNewUserName] = useState(userName);\n  const [newFirstName, setNewFirstName] = useState(firstName);\n  const [newLastName, setNewLastName] = useState(lastName);\n  const [isEditing, setIsEditing] = useState(false);\n\n  // Fonction pour récupérer les données utilisateur via l'API\n  async function getUser() {\n    const token = localStorage.getItem(\"token\");\n    if (!token) {\n      console.error(\"No token found, user is not authenticated.\");\n      return;\n    }\n    try {\n      const response = await fetch(\"http://localhost:3001/api/v1/user/profile\", {\n        method: \"GET\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Authorization: `Bearer ${token}`\n        }\n      });\n      if (!response.ok) {\n        throw new Error(\"Failed to fetch user data\");\n      }\n      const data = await response.json();\n      return data.body;\n    } catch (error) {\n      console.error(\"Error fetching user data:\", error);\n      throw error;\n    }\n  }\n\n  // useEffect pour récupérer les données au chargement de la page\n  useEffect(() => {\n    if (!isLoggedIn) {\n      navigate(\"/sign-in\"); // Redirige vers la page de connexion si pas connecté\n    } else {\n      getUser().then(userData => {\n        dispatch(setUser(userData)); // Stocke les données utilisateur dans Redux\n        setNewUserName(userData.userName);\n        setNewFirstName(userData.firstName); // Pré-remplit les champs\n        setNewLastName(userData.lastName);\n      }).catch(error => console.error(\"Error:\", error));\n    }\n  }, [isLoggedIn, navigate, dispatch]);\n  const handleFormSubmit = e => {\n    e.preventDefault();\n    dispatch(updateName({\n      userName: newUserName,\n      firstName: newFirstName,\n      lastName: newLastName\n    }));\n    setIsEditing(false);\n  };\n  return /*#__PURE__*/_jsxDEV(\"main\", {\n    className: \"main bg-dark\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"header\",\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: [\"Welcome back\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 11\n        }, this), isEditing ? /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: handleFormSubmit,\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: newUserName,\n            onChange: e => setNewUserName(e.target.value),\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: newFirstName,\n            onChange: e => setNewFirstName(e.target.value),\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: newLastName,\n            onChange: e => setNewLastName(e.target.value),\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            children: \"Save\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            onClick: () => setIsEditing(false),\n            children: \"Cancel\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [userName, \" \", firstName, \" \", lastName, \"!\", /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"edit-button\",\n            onClick: () => setIsEditing(true),\n            children: \"Edit Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 5\n  }, this);\n}\n_s(User, \"JIBjNRLkIsNHqHUCPitB3sGpeZU=\", false, function () {\n  return [useDispatch, useNavigate, useSelector, useSelector];\n});\n_c = User;\nexport default User;\nvar _c;\n$RefreshReg$(_c, \"User\");","map":{"version":3,"names":["React","useEffect","useState","useSelector","useDispatch","setUser","updateName","useNavigate","jsxDEV","_jsxDEV","Fragment","_Fragment","User","_s","dispatch","navigate","userName","firstName","lastName","state","user","isLoggedIn","auth","newUserName","setNewUserName","newFirstName","setNewFirstName","newLastName","setNewLastName","isEditing","setIsEditing","getUser","token","localStorage","getItem","console","error","response","fetch","method","headers","Authorization","ok","Error","data","json","body","then","userData","catch","handleFormSubmit","e","preventDefault","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","value","onChange","target","required","onClick","_c","$RefreshReg$"],"sources":["/Users/tonybruno/Documents/OC/ArgentBank/src/pages/User/user.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { setUser, updateName } from \"../../redux/Slices/userSlice\";\nimport { useNavigate } from \"react-router-dom\";\n\nfunction User() {\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n  const { userName, firstName, lastName } = useSelector((state) => state.user);\n  const isLoggedIn = useSelector((state) => state.auth.isLoggedIn);\n\n  const [newUserName, setNewUserName] = useState (userName)\n  const [newFirstName, setNewFirstName] = useState(firstName);\n  const [newLastName, setNewLastName] = useState(lastName);\n  const [isEditing, setIsEditing] = useState(false);\n\n  // Fonction pour récupérer les données utilisateur via l'API\n  async function getUser() {\n    const token = localStorage.getItem(\"token\");\n    if (!token) {\n      console.error(\"No token found, user is not authenticated.\");\n      return;\n    }\n\n    try {\n      const response = await fetch(\"http://localhost:3001/api/v1/user/profile\", {\n        method: \"GET\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Authorization: `Bearer ${token}`,\n        },\n      });\n\n      if (!response.ok) {\n        throw new Error(\"Failed to fetch user data\");\n      }\n\n      const data = await response.json();\n      return data.body;\n    } catch (error) {\n      console.error(\"Error fetching user data:\", error);\n      throw error;\n    }\n  }\n\n  // useEffect pour récupérer les données au chargement de la page\n  useEffect(() => {\n    if (!isLoggedIn) {\n      navigate(\"/sign-in\"); // Redirige vers la page de connexion si pas connecté\n    } else {\n      getUser()\n        .then((userData) => {\n          dispatch(setUser(userData)); // Stocke les données utilisateur dans Redux\n          setNewUserName(userData.userName);\n          setNewFirstName(userData.firstName); // Pré-remplit les champs\n          setNewLastName(userData.lastName);\n        })\n        .catch((error) => console.error(\"Error:\", error));\n    }\n  }, [isLoggedIn, navigate, dispatch]);\n\n  const handleFormSubmit = (e) => {\n    e.preventDefault();\n    dispatch(updateName({ userName: newUserName, firstName: newFirstName, lastName: newLastName }));\n    setIsEditing(false);\n  };\n\n  return (\n    <main className=\"main bg-dark\">\n      <div className=\"header\">\n        <h1>\n          Welcome back\n          <br />\n          {isEditing ? (\n            <form onSubmit={handleFormSubmit}>\n              <input\n                type=\"text\"\n                value={newUserName}\n                onChange={(e) => setNewUserName(e.target.value)}\n                required\n              />\n              <input\n                type=\"text\"\n                value={newFirstName}\n                onChange={(e) => setNewFirstName(e.target.value)}\n                required\n              />\n              <input\n                type=\"text\"\n                value={newLastName}\n                onChange={(e) => setNewLastName(e.target.value)}\n                required\n              />\n              <button type=\"submit\">Save</button>\n              <button type=\"button\" onClick={() => setIsEditing(false)}>\n                Cancel\n              </button>\n            </form>\n          ) : (\n            <>\n              {userName} {firstName} {lastName}!\n              <button className=\"edit-button\" onClick={() => setIsEditing(true)}>\n                Edit Name\n              </button>\n            </>\n          )}\n        </h1>\n      </div>\n    </main>\n  );\n}\n\nexport default User;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}