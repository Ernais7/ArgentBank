{"ast":null,"code":"var _jsxFileName = \"/Users/tonybruno/Documents/OC/ArgentBank/src/pages/User/user.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { setUser, updateName } from \"../../redux/Slices/userSlice\";\nimport { useNavigate } from \"react-router-dom\";\nimport Account from \"../../components/Account/account\";\nimport EditUser from \"../../components/EditUser/editUser\"; // Importez votre nouveau composant EditUser\nimport data from \"../../Data/account.json\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction User() {\n  _s();\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n  const {\n    userName,\n    firstName,\n    lastName\n  } = useSelector(state => state.user);\n  const isLoggedIn = useSelector(state => state.auth.isLoggedIn);\n  const [newUserName, setNewUserName] = useState(userName);\n  const [newFirstName, setNewFirstName] = useState(firstName);\n  const [newLastName, setNewLastName] = useState(lastName);\n  const [isEditing, setIsEditing] = useState(false);\n\n  // Fonction pour récupérer les données utilisateur via l'API\n  async function getUser() {\n    const token = localStorage.getItem(\"token\");\n    if (!token) {\n      console.error(\"No token found, user is not authenticated.\");\n      return;\n    }\n    try {\n      const response = await fetch(\"http://localhost:3001/api/v1/user/profile\", {\n        method: \"GET\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Authorization: `Bearer ${token}`\n        }\n      });\n      if (!response.ok) {\n        throw new Error(\"Failed to fetch user data\");\n      }\n      const data = await response.json();\n      return data.body;\n    } catch (error) {\n      console.error(\"Error fetching user data:\", error);\n      throw error;\n    }\n  }\n\n  // useEffect pour récupérer les données au chargement de la page\n  useEffect(() => {\n    if (!isLoggedIn) {\n      navigate(\"/sign-in\"); // Redirige vers la page de connexion si pas connecté\n    } else {\n      getUser().then(userData => {\n        dispatch(setUser(userData)); // Stocke les données utilisateur dans Redux\n        setNewUserName(userData.userName);\n        setNewFirstName(userData.firstName); // Pré-remplit les champs\n        setNewLastName(userData.lastName);\n      }).catch(error => console.error(\"Error:\", error));\n    }\n  }, [isLoggedIn, navigate, dispatch]);\n  const handleFormSubmit = e => {\n    e.preventDefault();\n    dispatch(updateName({\n      userName: newUserName,\n      firstName: newFirstName,\n      lastName: newLastName\n    }));\n    setIsEditing(false);\n  };\n  return /*#__PURE__*/_jsxDEV(\"main\", {\n    className: \"main bg-dark\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"header\",\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: [isEditing ? \"Edit user info\" : `Welcome back, ${userName} ${firstName} ${lastName}!`, isEditing ? /*#__PURE__*/_jsxDEV(EditUser, {\n          newUserName: newUserName,\n          setNewUserName: setNewUserName,\n          newFirstName: newFirstName,\n          setNewFirstName: setNewFirstName,\n          newLastName: newLastName,\n          setNewLastName: setNewLastName,\n          handleFormSubmit: handleFormSubmit,\n          setIsEditing: setIsEditing\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"edit-button\",\n          onClick: () => setIsEditing(true),\n          children: \"Edit Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Account, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 72,\n    columnNumber: 5\n  }, this);\n}\n_s(User, \"JIBjNRLkIsNHqHUCPitB3sGpeZU=\", false, function () {\n  return [useDispatch, useNavigate, useSelector, useSelector];\n});\n_c = User;\nexport default User;\nvar _c;\n$RefreshReg$(_c, \"User\");","map":{"version":3,"names":["React","useEffect","useState","useSelector","useDispatch","setUser","updateName","useNavigate","Account","EditUser","data","jsxDEV","_jsxDEV","User","_s","dispatch","navigate","userName","firstName","lastName","state","user","isLoggedIn","auth","newUserName","setNewUserName","newFirstName","setNewFirstName","newLastName","setNewLastName","isEditing","setIsEditing","getUser","token","localStorage","getItem","console","error","response","fetch","method","headers","Authorization","ok","Error","json","body","then","userData","catch","handleFormSubmit","e","preventDefault","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["/Users/tonybruno/Documents/OC/ArgentBank/src/pages/User/user.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { setUser, updateName } from \"../../redux/Slices/userSlice\";\nimport { useNavigate } from \"react-router-dom\";\nimport Account from \"../../components/Account/account\";\nimport EditUser from \"../../components/EditUser/editUser\"; // Importez votre nouveau composant EditUser\nimport data from \"../../Data/account.json\";\n\nfunction User() {\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n  const { userName, firstName, lastName } = useSelector((state) => state.user);\n  const isLoggedIn = useSelector((state) => state.auth.isLoggedIn);\n\n  const [newUserName, setNewUserName] = useState(userName);\n  const [newFirstName, setNewFirstName] = useState(firstName);\n  const [newLastName, setNewLastName] = useState(lastName);\n  const [isEditing, setIsEditing] = useState(false);\n\n  // Fonction pour récupérer les données utilisateur via l'API\n  async function getUser() {\n    const token = localStorage.getItem(\"token\");\n    if (!token) {\n      console.error(\"No token found, user is not authenticated.\");\n      return;\n    }\n\n    try {\n      const response = await fetch(\"http://localhost:3001/api/v1/user/profile\", {\n        method: \"GET\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Authorization: `Bearer ${token}`,\n        },\n      });\n\n      if (!response.ok) {\n        throw new Error(\"Failed to fetch user data\");\n      }\n\n      const data = await response.json();\n      return data.body;\n    } catch (error) {\n      console.error(\"Error fetching user data:\", error);\n      throw error;\n    }\n  }\n\n  // useEffect pour récupérer les données au chargement de la page\n  useEffect(() => {\n    if (!isLoggedIn) {\n      navigate(\"/sign-in\"); // Redirige vers la page de connexion si pas connecté\n    } else {\n      getUser()\n        .then((userData) => {\n          dispatch(setUser(userData)); // Stocke les données utilisateur dans Redux\n          setNewUserName(userData.userName);\n          setNewFirstName(userData.firstName); // Pré-remplit les champs\n          setNewLastName(userData.lastName);\n        })\n        .catch((error) => console.error(\"Error:\", error));\n    }\n  }, [isLoggedIn, navigate, dispatch]);\n\n  const handleFormSubmit = (e) => {\n    e.preventDefault();\n    dispatch(updateName({ userName: newUserName, firstName: newFirstName, lastName: newLastName }));\n    setIsEditing(false);\n  };\n\n  return (\n    <main className=\"main bg-dark\">\n      <div className=\"header\">\n        <h1>\n          {isEditing ? \"Edit user info\" : `Welcome back, ${userName} ${firstName} ${lastName}!`}\n          {isEditing ? (\n            <EditUser\n              newUserName={newUserName}\n              setNewUserName={setNewUserName}\n              newFirstName={newFirstName}\n              setNewFirstName={setNewFirstName}\n              newLastName={newLastName}\n              setNewLastName={setNewLastName}\n              handleFormSubmit={handleFormSubmit}\n              setIsEditing={setIsEditing}\n            />\n          ) : (\n            <button className=\"edit-button\" onClick={() => setIsEditing(true)}>\n              Edit Name\n            </button>\n          )}\n        </h1>\n      </div>\n      <Account />\n    </main>\n  );\n}\n\nexport default User;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}